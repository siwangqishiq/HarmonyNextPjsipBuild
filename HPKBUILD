# Contributor: shann <swkec@isoftstone.com>
# Maintainer: shann <swkec@isoftstone.com>
pkgname=pjsip
pkgver=2.13.1
pkgrel=0
pkgdesc="PJSIP is a free and open-source multimedia communication library that implements standards-based protocols such as SIP, SDP, RTP, STUN, TURN, and ICE. It integrates the signaling protocol SIP-based multimedia framework and NAT traversal capabilities into a high-level abstracted multimedia communication API."
url="https://www.pjsip.org/"
# archs=("armeabi-v7a" "arm64-v8a" "x86_64")
archs=("arm64-v8a")
license=("GPL" "OSS")
depends=("opus")
makedepends=()

source="https://github.com/$pkgname/pjproject/archive/refs/tags/$pkgver.tar.gz"

autounpack=true
downloadpackage=true
buildtools="configure"

builddir=$pkgname-${pkgver}
packagename=$builddir.tar.gz
unpkgname=pjproject-2.13.1
source envset.sh
host=

patchflag=true

prepare() {
    pwd 
    # 拷贝 OHAudio 驱动
    cp ohaudio_dev.c ${unpkgname}/pjmedia/src/pjmedia-audiodev

    # 拷贝裁剪配置
    cp config_site.h ${unpkgname}/pjlib/include/pj

    # 注册工厂
    rm ${unpkgname}/pjmedia/src/pjmedia-audiodev/audiodev.c
    cp audiodev.c ${unpkgname}/pjmedia/src/pjmedia-audiodev

    # 修改Makefile文件
    rm ${unpkgname}/pjmedia/build/Makefile
    cp Makefile ${unpkgname}/pjmedia/build

    if $patchflag
    then
        cd ${unpkgname}
        # 修复pjmedia-test死循环问题,patch来自官网https://github.com/pjsip/pjproject/pull/3641/files
        patch  -p1 < ../pjsip_oh_pkg.patch
        cd $OLDPWD
        # patch只需要打一次,关闭打patch
        patchflag=false
    fi

    cp ${unpkgname} $pkgname-$ARCH-build -r

    if [ $ARCH == "armeabi-v7a" ]; then
        setarm32ENV
        host=arm-linux
    elif [ $ARCH == "arm64-v8a" ]; then
        setarm64ENV
        host=aarch64-linux
    elif [ $ARCH == "x86_64" ]; then
        setx86_64ENV
        host=x86_64-linux
    else
        echo "${ARCH} not support"
        return -1
    fi

    # dos2unix ${unpkgname}/third_party/gsm/Makefile
}

# build() {
#     cd $pkgname-$ARCH-build
#     ./configure "$@" --host=$host \
#     LDFLAGS="${LDFLAGS} -L$LYCIUM_ROOT/usr/opus/$ARCH/lib" \
#     CFLAGS="${CFLAGS} -D__OHOS__ -DPJMEDIA_AUDIO_DEV_HAS_OHAUDIO=1 -I$LYCIUM_ROOT/usr/opus/$ARCH/include" \
#     LD=$CXX  \
#     LIBS="-lohaudio" \
#     --disable-libwebrtc --disable-gsm-codec > `pwd`/build.log 2>&1

#     make dep >> `pwd`/build.log 2>&1
#     make -j4 VERBOSE=1 >> `pwd`/build.log 2>&1


#     ret=$?
#     cd $OLDPWD
#     return $ret
# }

build() {
    cd $pkgname-$ARCH-build
    ./configure "$@" --host=$host \
    LDFLAGS="${LDFLAGS} -L$LYCIUM_ROOT/usr/opus/$ARCH/lib" \
    CFLAGS="${CFLAGS} -D__OHOS__ -DPJMEDIA_AUDIO_DEV_HAS_OHAUDIO=1 -I$LYCIUM_ROOT/usr/opus/$ARCH/include" \
    LD=$CXX  \
    LIBS="-lohaudio" \
    --disable-libwebrtc --disable-gsm-codec 2>&1

    make dep 2>&1
    make VERBOSE=1 2>&1

    ret=$?
    cd $OLDPWD
    return $ret
}

package() {
    cd $pkgname-$ARCH-build
    make install >> `pwd`/build.log 2>&1
    cd $OLDPWD
}

check() {
    if [ $ARCH == "armeabi-v7a" ]; then
        unsetarm32ENV
    elif [ $ARCH == "arm64-v8a" ]; then
        unsetarm64ENV
    elif [ $ARCH == "x86_64" ]; then
        unsetx86_64ENV
    else
        echo "${ARCH} not support"
        return -1
    fi

    # 屏蔽python相关测试项
    sed -i '104 s/pjsua-test/#pjsua-test/g' ./$pkgname-$ARCH-build/Makefile
    echo "The test must be on an OpenHarmony device!"
    # 编译生成目录$pkgname-$ARCH-build下执行make selftest
}

# 清理环境
cleanbuild() {
    rm -rf ${PWD}/$pkgname-$ARCH-build ${PWD}/${unpkgname}
}
